// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241014020041_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TypeNote")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            RoomTypeName = "Standard",
                            TypeDescription = "Basic room with essential amenities",
                            TypeNote = "Includes free breakfast"
                        },
                        new
                        {
                            RoomTypeId = 2,
                            RoomTypeName = "Deluxe",
                            TypeDescription = "Spacious room with additional features",
                            TypeNote = "Sea view, includes free breakfast and gym access"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateOnly>("CustomerBirthday")
                        .HasColumnType("date");

                    b.Property<string>("CustomerFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CustomerStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerBirthday = new DateOnly(1990, 1, 1),
                            CustomerFullName = "Nguyen Van A",
                            CustomerStatus = 0,
                            EmailAddress = "nguyenvana@example.com",
                            Password = "password123",
                            Telephone = "0123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerBirthday = new DateOnly(1985, 5, 15),
                            CustomerFullName = "Tran Thi B",
                            CustomerStatus = 0,
                            EmailAddress = "tranthib@example.com",
                            Password = "password456",
                            Telephone = "0987654321"
                        });
                });

            modelBuilder.Entity("BusinessObjects.CustomerBookRoom", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("CustomerId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("CustomerBookRooms");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            RoomId = 1,
                            FromDate = new DateOnly(2024, 10, 1),
                            ToDate = new DateOnly(2024, 10, 20)
                        },
                        new
                        {
                            CustomerId = 2,
                            RoomId = 2,
                            FromDate = new DateOnly(2024, 10, 10),
                            ToDate = new DateOnly(2024, 10, 23)
                        });
                });

            modelBuilder.Entity("BusinessObjects.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("RoomDescription")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("RoomMaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RoomPricePerDate")
                        .HasColumnType("money");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            RoomDescription = "Standard room with queen bed",
                            RoomMaxCapacity = 2,
                            RoomNumber = "101",
                            RoomPricePerDate = 100m,
                            RoomStatus = 0,
                            RoomTypeId = 1
                        },
                        new
                        {
                            RoomId = 2,
                            RoomDescription = "Deluxe room with king bed and balcony",
                            RoomMaxCapacity = 3,
                            RoomNumber = "202",
                            RoomPricePerDate = 200m,
                            RoomStatus = 0,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("BusinessObjects.CustomerBookRoom", b =>
                {
                    b.HasOne("BusinessObjects.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("BusinessObjects.Room", b =>
                {
                    b.HasOne("BusinessObject.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });
#pragma warning restore 612, 618
        }
    }
}
